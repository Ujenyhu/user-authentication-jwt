<?xml version="1.0"?>
<doc>
    <assembly>
        <name>userauthjwt</name>
    </assembly>
    <members>
        <member name="M:userauthjwt.Controllers.UserController.SignIn(userauthjwt.Requests.User.SignInRequest)">
            <summary>
            Signs in user into the app.
            </summary>
            <remarks>
            It returns a token. Use the token for Bearer authentication to access authorized endpoints
            </remarks>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:userauthjwt.Controllers.UserController.Refresh(userauthjwt.Requests.User.RefreshTokenRequest)">
            <summary>
             This endpoint is used to refresh a users token.
            </summary>
             <param name="tokenApiModel"></param>
        </member>
        <member name="M:userauthjwt.Controllers.UserController.Revoke">
            <summary>
             This endpoint is used to revoke a token and logout currently logged in user
            </summary>
        </member>
        <member name="M:userauthjwt.Controllers.UserController.ChangePassword(userauthjwt.Requests.User.ChangePasswordRequest)">
            <summary>
             Change user password
            </summary>
             <param name="request"></param>
        </member>
        <member name="M:userauthjwt.Controllers.UserController.ForgotPassword(userauthjwt.Requests.User.ForgotPasswordRequest)">
            <summary>
             Request to change password if forgotten
            </summary>
             <param name="request"></param>
        </member>
        <member name="M:userauthjwt.Controllers.UserController.SendOtp(userauthjwt.Requests.User.OtpRequest)">
            <summary>
            sends otp to Email or Telephone
            </summary>
            <remarks>
             It an be used to send codes for authentication purposes to the provided email address or phone number of users for password/transaction pin change, 2FA, etc.
             The 'RequestType' differentiates the action as to when you want to send an sms to a phone number or email to an email address. 
             RequestType can either be 'EMAIL' or 'SMS' and the 'RequestSource' will be the email address or phone number of the user. 
             All fields are required.
             
            e.g For sms:
            
                POST api/SendOtp
                
                {        
                  "RequestType": "SMS",
                  "RequestSource": "081xxxxxx"
                  
                }
                
              e.g For email:
            
                POST api/SendOtp
                
                {        
                  "RequestType": "EMAIL",
                  "InpuRequestSourcetSource": "user@example.com"
                  
                } 
                
            </remarks>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:userauthjwt.Controllers.UserController.VerifyOtp(userauthjwt.Requests.User.VerifyOtpRequest)">
            <summary>
            Verify OTP sent to email/phone
            </summary>
            <remarks>
             This endpoint is to be used to verify the validity of an otp.
             The 'RequestType' differentiates the action as to when you want to send an sms to a phone number or email to an email address. 
             RequestType can either be 'EMAIL' or 'SMS' and the 'RequestSource' will be the email address or phone number of the user. 
             All fields are required.
             
            e.g For sms:
            
                POST api/VerifyOtp
                
                {        
                  "RequestType": "SMS",
                  "RequestSource": "081xxxxxx"
                  
                }
                
              e.g For email:
            
                POST api/VerifyOtp
                
                {        
                  "RequestType": "EMAIL",
                  "RequestSource": "user@example.com"
                  
                } 
                
                NOTE: This endpoint should only be used or called for users who have completed the registration process.
            </remarks>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:userauthjwt.Controllers.UserController.GetUserByUserId(System.String)">
            <summary>
            Retrieves complete user profile by UserId
            </summary>
            <param name="UserId"></param>
            <returns></returns>
        </member>
        <member name="M:userauthjwt.Controllers.UserRegistrationController.SignUp(userauthjwt.Requests.User.SignUpRequest)">
            <summary>
            Sign up a new public user
            </summary>
            <remarks>
             All fields are required  at the point of registration.
             This endpoint is to be used for individual/public users. It does not require Bearer authentication
            </remarks>
            <param name="request"></param>
            <returns>The userId and usertype of the newly created user.</returns>
        </member>
        <member name="M:userauthjwt.Controllers.UserRegistrationController.SendVerificationOtp(userauthjwt.Requests.User.OtpRequest)">
            <summary>
            sends user verification code to Email or Telephone
            </summary>
            <remarks>
             This endpoint is to be used during the registration process to send one time password to the provided email address or phone number at the point of signup.
             The 'RequestType' differentiates the action as to when you want to send the sms to verify a phone number or email to verify an email address. 
             RequestType can either be 'EMAIL' or 'SMS' and the 'RequestSource' will be the email address or phone number of the user. All fields are required.
             
            e.g Verify telephone at the point of reg:
            
                POST api/SendVerificiationOtp
                
                {        
                  "RequestType": "SMS",
                  "RequestSource": "081xxxx"
                  
                }
                
              e.g Verify email at the point of reg:
            
                POST api/SendVerificiationOtp
                
                {        
                  "RequestType": "EMAIL",
                  "RequestSource": "user@example.com"
                  
                } 
                
            </remarks>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:userauthjwt.Controllers.UserRegistrationController.ConfirmVerificationOtp(userauthjwt.Requests.User.VerifyOtpRequest)">
            <summary>
            Verify OTP sent to email/phone during registration process
            </summary>
            <remarks>
             This endpoint is to be used to verify/compare if the otp sent and the one provided by the user is valid.
             The 'InputType' differentiates the action. InputType can either be 'EMAIL' or 'TELEPHONE' and the 'InputSource' will be the email address or phone number of the user.
             'OTP' will hold the code that was sent to the user's device. All fields are required.
              
            e.g Verify telephone at the point of reg:
            
                POST api/ConfirmVerificationOtp
                
                {        
                  "InputType": "TELEPHONE",
                  "InputSource": "081xxxxxx",
                  "Otp": "xxxxxx"
                  
                }
                
              e.g Verify email at the point of reg:
            
                POST api/ConfirmVerificationOtp
                
                {        
                  "InputType": "EMAIL",
                  "InputSource": "user@example.com",
                  "Otp": "xxxxxx"
                  
                } 
                NOTE: This endpoint should only be used or called at the point of registration. It does not require Bearer authentication
            </remarks>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:userauthjwt.Controllers.UserRegistrationController.GetUserByUserId(System.String)">
            <summary>
            Retrieves complete user registration profile
            </summary>
            <param name="UserId"></param>
            <returns></returns>
        </member>
        <member name="P:userauthjwt.Responses.ResponseBase`1.StatusCode">
            <summary>
            The HTTP status code of the response.
            </summary>
        </member>
        <member name="P:userauthjwt.Responses.ResponseBase`1.Status">
            <summary>
            The status of the response (e.g., SUCCESS, ERROR).
            </summary>
        </member>
        <member name="P:userauthjwt.Responses.ResponseBase`1.Message">
            <summary>
            A message providing additional information about the response.
            </summary>
        </member>
        <member name="P:userauthjwt.Responses.ResponseBase`1.Data">
            <summary>
            The actual data being returned in the response. This field can be null
            </summary>
        </member>
    </members>
</doc>
